// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Table component should render a Table with 2 levels 1`] = `
<ElementaryTable
  elevatedColumnIndexes={Object {}}
  elevatedRowIndexes={Object {}}
  id="table-foo"
  indexesMapping={
    Object {
      "absolute": Object {
        "0": Object {
          "index": 0,
          "parentIndex": null,
        },
        "1": Object {
          "index": 1,
          "parentIndex": null,
        },
        "2": Object {
          "index": 2,
          "parentIndex": null,
        },
      },
      "relative": Object {
        "0": Object {
          "index": 0,
        },
        "1": Object {
          "index": 1,
        },
        "2": Object {
          "index": 2,
        },
      },
    }
  }
  onRowClose={[Function]}
  onRowOpen={[Function]}
  openedTrees={Object {}}
  rows={
    Array [
      Object {
        "cells": Array [
          Object {
            "id": "wawoo",
            "value": "Wawooo!",
          },
          Object {
            "id": "wah",
            "value": "Wah!",
          },
          Object {
            "id": "cool",
            "value": "Cool!",
          },
        ],
        "id": "front",
        "isHeader": true,
        "isSelectable": false,
      },
      Object {
        "cells": Array [
          Object {
            "id": "react",
            "subItems": Array [
              Object {
                "cells": Array [
                  Object {
                    "id": "storybook",
                    "value": "Storybook",
                  },
                  Object {
                    "id": "jest",
                    "value": "Jest",
                  },
                  Object {
                    "id": "Enzym",
                    "subItems": Array [],
                    "value": "enzyme",
                  },
                ],
                "id": "foo",
              },
              Object {
                "cells": Array [
                  Object {
                    "id": "docker",
                    "value": "Docker",
                  },
                  Object {
                    "id": "doccomp",
                    "value": "Docker compose",
                  },
                  Object {
                    "id": "Sentry",
                    "subItems": Array [],
                    "value": "Sentry",
                  },
                ],
                "id": "back",
              },
            ],
            "value": "React",
          },
          Object {
            "id": "angular",
            "value": "Angular",
          },
          Object {
            "id": "vuejs",
            "value": "VueJS",
          },
        ],
        "id": "front1",
        "title": "foo",
      },
      Object {
        "cells": Array [
          Object {
            "id": "python",
            "value": "Python",
          },
          Object {
            "id": "Go",
            "subItems": Array [],
            "value": "Go",
          },
          Object {
            "id": "Java",
            "value": "java",
          },
        ],
        "id": "back",
      },
    ]
  }
  selectedCells={Object {}}
/>
`;

exports[`Table component should render a Table with 3 levels 1`] = `
<ElementaryTable
  elevatedColumnIndexes={Object {}}
  elevatedRowIndexes={Object {}}
  id="table-foo"
  indexesMapping={
    Object {
      "absolute": Object {
        "0": Object {
          "index": 0,
          "parentIndex": null,
        },
        "1": Object {
          "index": 1,
          "parentIndex": null,
        },
        "2": Object {
          "index": 2,
          "parentIndex": null,
        },
      },
      "relative": Object {
        "0": Object {
          "index": 0,
        },
        "1": Object {
          "index": 1,
        },
        "2": Object {
          "index": 2,
        },
      },
    }
  }
  onRowClose={[Function]}
  onRowOpen={[Function]}
  openedTrees={Object {}}
  rows={
    Array [
      Object {
        "cells": Array [
          Object {
            "id": "wawoo",
            "value": "Wawooo!",
          },
          Object {
            "id": "wah",
            "value": "Wah!",
          },
          Object {
            "id": "cool",
            "value": "Cool!",
          },
        ],
        "id": "front",
        "isHeader": true,
        "isSelectable": false,
      },
      Object {
        "cells": Array [
          Object {
            "id": "react",
            "subItems": Array [
              Object {
                "cells": Array [
                  Object {
                    "id": "storybook",
                    "value": "Storybook",
                  },
                  Object {
                    "id": "jest",
                    "value": "Jest",
                  },
                  Object {
                    "id": "Enzym",
                    "subItems": Array [
                      Object {
                        "cells": Array [
                          Object {
                            "id": "sushi",
                            "value": "Sushi",
                          },
                          Object {
                            "id": "pizza",
                            "value": "Pizza",
                          },
                          Object {
                            "id": "mafe",
                            "value": "Mafe",
                          },
                        ],
                        "id": "miam",
                      },
                    ],
                    "value": "enzyme",
                  },
                ],
                "id": "foo",
              },
              Object {
                "cells": Array [
                  Object {
                    "id": "docker",
                    "value": "Docker",
                  },
                  Object {
                    "id": "doccomp",
                    "value": "Docker compose",
                  },
                  Object {
                    "id": "Sentry",
                    "subItems": Array [
                      Object {
                        "cells": Array [
                          Object {
                            "id": "sushi",
                            "value": "Sushi",
                          },
                          Object {
                            "id": "pizza",
                            "value": "Pizza",
                          },
                          Object {
                            "id": "mafe",
                            "value": "Mafe",
                          },
                        ],
                        "id": "miam",
                      },
                    ],
                    "value": "Sentry",
                  },
                ],
                "id": "back",
              },
            ],
            "value": "React",
          },
          Object {
            "id": "angular",
            "value": "Angular",
          },
          Object {
            "id": "vuejs",
            "value": "VueJS",
          },
        ],
        "id": "front1",
        "title": "foo",
      },
      Object {
        "cells": Array [
          Object {
            "id": "python",
            "value": "Python",
          },
          Object {
            "id": "Go",
            "subItems": Array [],
            "value": "Go",
          },
          Object {
            "id": "Java",
            "value": "java",
          },
        ],
        "id": "back",
      },
    ]
  }
  selectedCells={Object {}}
/>
`;

exports[`Table component should render a Table with spans 1`] = `
<ElementaryTable
  elevatedColumnIndexes={Object {}}
  elevatedRowIndexes={Object {}}
  id="table-foo"
  indexesMapping={
    Object {
      "absolute": Object {
        "0": Object {
          "index": 0,
          "parentIndex": null,
        },
        "1": Object {
          "index": 1,
          "parentIndex": null,
        },
        "2": Object {
          "index": 2,
          "parentIndex": null,
        },
      },
      "relative": Object {
        "0": Object {
          "index": 0,
        },
        "1": Object {
          "index": 1,
        },
        "2": Object {
          "index": 2,
        },
      },
    }
  }
  isSpan={true}
  onRowClose={[Function]}
  onRowOpen={[Function]}
  openedTrees={Object {}}
  rows={
    Array [
      Object {
        "cells": Array [
          Object {
            "id": "wawoo",
            "value": "Wawooo!",
          },
          Object {
            "id": "wah",
            "value": "Wah!",
          },
          Object {
            "id": "cool",
            "value": "Cool!",
          },
        ],
        "id": "front",
        "isHeader": true,
        "isSelectable": false,
      },
      Object {
        "cells": Array [
          Object {
            "id": "react",
            "subItems": Array [
              Object {
                "cells": Array [
                  Object {
                    "id": "storybook",
                    "value": "Storybook",
                  },
                  Object {
                    "id": "jest",
                    "value": "Jest",
                  },
                  Object {
                    "id": "Enzym",
                    "subItems": Array [],
                    "value": "enzyme",
                  },
                ],
                "id": "foo",
              },
              Object {
                "cells": Array [
                  Object {
                    "id": "docker",
                    "value": "Docker",
                  },
                  Object {
                    "id": "doccomp",
                    "value": "Docker compose",
                  },
                  Object {
                    "id": "Sentry",
                    "subItems": Array [],
                    "value": "Sentry",
                  },
                ],
                "id": "back",
              },
            ],
            "value": "React",
          },
          Object {
            "id": "angular",
            "value": "Angular",
          },
          Object {
            "id": "vuejs",
            "value": "VueJS",
          },
        ],
        "id": "front1",
        "title": "foo",
      },
      Object {
        "cells": Array [
          Object {
            "id": "python",
            "value": "Python",
          },
          Object {
            "id": "Go",
            "subItems": Array [
              Object {
                "cells": Array [
                  Object {
                    "id": "storybook",
                    "value": "Storybook",
                  },
                  Object {
                    "id": "jest",
                    "value": "Jest",
                  },
                  Object {
                    "id": "Enzym",
                    "subItems": Array [],
                    "value": "enzyme",
                  },
                ],
                "id": "foo",
              },
              Object {
                "cells": Array [
                  Object {
                    "id": "docker",
                    "value": "Docker",
                  },
                  Object {
                    "id": "doccomp",
                    "value": "Docker compose",
                  },
                  Object {
                    "id": "Sentry",
                    "subItems": Array [],
                    "value": "Sentry",
                  },
                ],
                "id": "back",
              },
            ],
            "value": "Go",
          },
          Object {
            "id": "Java",
            "value": "java",
          },
        ],
        "id": "back",
      },
    ]
  }
  selectedCells={Object {}}
/>
`;

exports[`Table component should render a responsive Table 1`] = `
<ResponsiveContainer>
  [Function]
</ResponsiveContainer>
`;

exports[`Table component should render a selectable Table 1`] = `
<SelectionHandler>
  [Function]
</SelectionHandler>
`;

exports[`Table component should render a virtualized Table 1`] = `
<Virtualizer
  columnsLength={3}
  fixedCellsHeight={
    Object {
      "count": 0,
      "sum": 0,
    }
  }
  fixedCellsWidth={
    Object {
      "count": 0,
      "sum": 0,
    }
  }
  fixedColumns={Array []}
  fixedRows={Array []}
  height={300}
  hiddenColumns={Array []}
  hiddenRows={Array []}
  horizontalPadding={0}
  initialScroll={
    Object {
      "columnIndex": 3,
      "rowIndex": 4,
    }
  }
  rowsLength={3}
  verticalPadding={0}
  width={400}
>
  [Function]
</Virtualizer>
`;

exports[`Table component should render the default table 1`] = `
<ElementaryTable
  elevatedColumnIndexes={Object {}}
  elevatedRowIndexes={Object {}}
  id="table-foo"
  indexesMapping={
    Object {
      "absolute": Object {
        "0": Object {
          "index": 0,
          "parentIndex": null,
        },
        "1": Object {
          "index": 1,
          "parentIndex": null,
        },
        "2": Object {
          "index": 2,
          "parentIndex": null,
        },
        "3": Object {
          "index": 3,
          "parentIndex": null,
        },
        "4": Object {
          "index": 4,
          "parentIndex": null,
        },
        "5": Object {
          "index": 5,
          "parentIndex": null,
        },
      },
      "relative": Object {
        "0": Object {
          "index": 0,
        },
        "1": Object {
          "index": 1,
        },
        "2": Object {
          "index": 2,
        },
        "3": Object {
          "index": 3,
        },
        "4": Object {
          "index": 4,
        },
        "5": Object {
          "index": 5,
        },
      },
    }
  }
  onRowClose={[Function]}
  onRowOpen={[Function]}
  openedTrees={Object {}}
  rows={
    Array [
      Object {
        "cells": Array [
          Object {
            "id": "wawoo",
            "value": "Wawooo!",
          },
          Object {
            "id": "wah",
            "value": "Wah!",
          },
          Object {
            "id": "cool",
            "value": "Cool!",
          },
        ],
        "id": "front",
        "isHeader": true,
      },
      Object {
        "cells": Array [
          Object {
            "cellContent": undefined,
            "cellContentProps": undefined,
            "id": "react",
            "value": "React",
          },
          Object {
            "id": "angular",
            "value": "Angular",
          },
          Object {
            "id": "vuejs",
            "value": "VueJS",
          },
        ],
        "id": "front1",
      },
      Object {
        "cells": Array [
          Object {
            "id": "python",
            "value": "Python",
          },
          Object {
            "id": "Go",
            "value": "Go",
          },
          Object {
            "id": "Java",
            "value": "java",
          },
        ],
        "id": "back",
      },
      Object {
        "cells": Array [
          Object {
            "id": "python",
            "value": "Python1",
          },
          Object {
            "id": "Go",
            "value": "Go",
          },
          Object {
            "id": "Java",
            "value": "java",
          },
        ],
        "id": "back1",
      },
      Object {
        "cells": Array [
          Object {
            "id": "python",
            "value": "Python2",
          },
          Object {
            "id": "Go",
            "value": "Go",
          },
          Object {
            "id": "Java",
            "value": "java",
          },
        ],
        "id": "back2",
      },
      Object {
        "cells": Array [
          Object {
            "id": "python",
            "value": "Python3",
          },
          Object {
            "id": "Go",
            "value": "Go",
          },
          Object {
            "id": "Java",
            "value": "java",
          },
        ],
        "id": "back3",
      },
    ]
  }
  selectedCells={Object {}}
/>
`;
